services:

  # TODO: There is a bit of an issue with running this in a container,
  # kasa discover uses udp broadcasts which are lost at the container network boundary
  # they do not propogate past it without further... more painful
  # configuration is going to be requires. Host networking is one of those, yet i have 
  # yet to get it to work. macvlan is another option
  # kasa_exporter:
  #   build:
  #     context: .
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - KASA_USERNAME
  #     - KASA_PASSWORD
  #   network_mode: host
  #   # networks:
  #   #   macvlan_net:
  #   #     ipv4_address: 192.168.1.3
  #   develop:
  #     watch:
  #       - action: sync
  #         path: ./kasa_exporter
  #         target: /app/kasa_exporter
  #         # ignore:
  #           # - node_modules/
  #       # - action: rebuild
  #         # path: package.json

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    network_mode: host

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - ./etc/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./etc/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./etc/grafana/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=panda
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    network_mode: host
    depends_on:
      - prometheus

  pushgateway:
    image: prom/pushgateway:latest
    container_name: pushgateway
    ports:
      - "9091:9091"
    network_mode: host

networks:
  macvlan_net:
    name: macvlan_network
    external: true


# docker network create -d macvlan \
#   --subnet=192.168.1.0/24 \
#   --gateway=192.168.1.1 \
#   -o parent=en0 macvlan_network
